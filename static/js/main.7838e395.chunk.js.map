{"version":3,"sources":["componentes/Header.js","componentes/FormularioTareas.js","componentes/Tareas.js","componentes/ListaTareas.js","App.js","index.js"],"names":["Header","setMostrarCompletadas","mostrarCompletadas","toggleCompleted","className","onClick","icon","faEyeSlash","faEye","FormularioTareas","tareas","cambiarTareas","useState","inputTarea","cambiarInputTareas","accion","onSubmit","e","preventDefault","id","uuidv4","text","completed","type","placeholder","value","onChange","e0","target","required","faPlusSquare","Tareas","tarea","editarTarea","borrarTarea","editandoTarea","setEditandoTarea","nuevaTarea","setNuevaTarea","faCheckSquare","faSquare","action","faEdit","faTimes","ListaTareas","map","cadaTarea","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7838e395.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEyeSlash, faEye} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header = ({setMostrarCompletadas, mostrarCompletadas}) => {\r\n\r\n    let toggleCompleted = () => {\r\n        setMostrarCompletadas(!mostrarCompletadas)\r\n    }\r\n\r\n    return ( \r\n        <header className=\"header\">\r\n\r\n            <h1 className=\"header__titulo\">Lista de Tareas</h1>\r\n\r\n            {mostrarCompletadas\r\n            ? \r\n            <button\r\n                className=\"header__boton\"\r\n                onClick={() => toggleCompleted()} >\r\n                No mostrar completadas\r\n                <FontAwesomeIcon icon={faEyeSlash} className=\"header__icon-boton\"/>\r\n            </button>\r\n\r\n            :\r\n\r\n            <button\r\n                className=\"header__boton\"\r\n                onClick={() => toggleCompleted()} >\r\n                Mostrar completadas\r\n                <FontAwesomeIcon icon={faEye} className=\"header__icon-boton\" />\r\n        </button>   \r\n            }\r\n\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Header;","import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlusSquare} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst FormularioTareas = ({tareas, cambiarTareas}) => {\r\n    let [inputTarea, cambiarInputTareas] = useState('');\r\n\r\n    let handleInput = (e) => {\r\n        cambiarInputTareas(e.target.value);\r\n    }\r\n\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        cambiarTareas(\r\n            [\r\n                ...tareas,\r\n                {\r\n                    id: uuidv4(),\r\n                    text: inputTarea,\r\n                    completed: false\r\n                }\r\n            ]\r\n        );\r\n        cambiarInputTareas('');\r\n    }\r\n\r\n    return ( \r\n        <form accion=\"\" className=\"formulario-tareas\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"formulario-tareas__input\"\r\n                placeholder=\"ingrese su tarea aquÃ­\"\r\n                value={inputTarea}\r\n                onChange={(e0) => handleInput(e0)}\r\n                required\r\n            />\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"formulario-tareas__btn\"\r\n            >\r\n                <FontAwesomeIcon icon={faPlusSquare} className=\"formulario-tareas__icono-btn\"/>\r\n            </button>\r\n            \r\n        </form>\r\n     );\r\n}\r\n \r\nexport default FormularioTareas;","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCheckSquare, faEdit, faSquare, faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Tareas = ({tarea, toggleCompleted, editarTarea, borrarTarea}) => {\r\n\r\n    let [editandoTarea, setEditandoTarea] = useState(false);\r\n    let [nuevaTarea, setNuevaTarea] = useState(tarea.text);\r\n\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        editarTarea(tarea.id, nuevaTarea);\r\n        setEditandoTarea(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <li className=\"lista-tareas__tarea\" key={tarea.id}>\r\n            <FontAwesomeIcon\r\n                icon={tarea.completed ? faCheckSquare : faSquare}\r\n                className=\"lista-tareas__icono lista-tareas__icono-check\"\r\n                onClick={() => toggleCompleted(tarea.id)}\r\n            />\r\n\r\n            <div className=\"lista-tareas__texto\">\r\n                {editandoTarea ?\r\n                <form action=\"\" className=\"formulario-editar-tarea\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"formulario-editar-tarea__input\"\r\n                        value={nuevaTarea}\r\n                        onChange={(e) => setNuevaTarea(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"formulario-editar-tarea__btn\"\r\n                    >\r\n                        Actualizar\r\n                    </button>\r\n                </form>\r\n                : tarea.text\r\n                }\r\n            </div> \r\n\r\n            <div className=\"lista-tareas__contenedor-botones\">\r\n                <FontAwesomeIcon\r\n                    icon={faEdit}\r\n                    className=\"lista-tareas__icono lista-tareas__icon-accion\"\r\n                    onClick={() => setEditandoTarea(!editandoTarea)}\r\n                />\r\n\r\n                <FontAwesomeIcon\r\n                    icon={faTimes}\r\n                    className=\"lista-tareas__icono lista-tareas__icon-accion\"\r\n                    onClick={() => borrarTarea(tarea.id)}\r\n                />\r\n            </div>\r\n        </li>\r\n\r\n     );\r\n}\r\n\r\nexport default Tareas;","import React from 'react';\r\nimport Tareas from \"./Tareas\"\r\n\r\nconst ListaTareas = ({tareas, cambiarTareas, mostrarCompletadas}) => {\r\n\r\n    let toggleCompleted = (id) => {\r\n        cambiarTareas(tareas.map( (cadaTarea) => {\r\n            if(cadaTarea.id === id){\r\n                return {...cadaTarea, completed: !cadaTarea.completed}\r\n            } else {\r\n                return cadaTarea;\r\n            }\r\n        } ));\r\n    }\r\n\r\n    let editarTarea = (id, nuevaTarea) => {\r\n        cambiarTareas(tareas.map( (cadaTarea) => {\r\n            if(cadaTarea.id === id){\r\n                return {...cadaTarea, text: nuevaTarea}\r\n            } else {\r\n                return cadaTarea;\r\n            }\r\n        } ));\r\n    }\r\n\r\n    let borrarTarea = (id) => {\r\n        cambiarTareas(tareas.filter( (cadaTarea) => {\r\n            if(cadaTarea.id !== id){\r\n                return cadaTarea;\r\n            } else {\r\n                return;\r\n            }\r\n        } ));\r\n    }\r\n\r\n    return ( \r\n        <ul className=\"lista-tareas\">\r\n\r\n            {\r\n            tareas.length > 0 ? tareas.map((tarea) => {\r\n                if(mostrarCompletadas){\r\n                    return <Tareas\r\n                    key={tarea.id}\r\n                    tarea={tarea}\r\n                    toggleCompleted={toggleCompleted}\r\n                    editarTarea={editarTarea}\r\n                    borrarTarea={borrarTarea}\r\n                />\r\n                } else if(!tarea.completed) {\r\n                    return <Tareas\r\n                    key={tarea.id}\r\n                    tarea={tarea}\r\n                    toggleCompleted={toggleCompleted}\r\n                    editarTarea={editarTarea}\r\n                    borrarTarea={borrarTarea}\r\n                />\r\n                }\r\n                return;\r\n            })\r\n            : <div className=\"lista-tareas__mensaje\">No hay tareas agregadas</div>\r\n            }\r\n\r\n        </ul>\r\n     );\r\n}\r\n\r\nexport default ListaTareas;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./componentes/Header\"\nimport FormularioTareas from \"./componentes/FormularioTareas\"\nimport ListaTareas from \"./componentes/ListaTareas\"\n\nlet App = () => {\n\n  //obtenemos las tareas guardadas de localstorage\n  let tareasGuardadas =\n  localStorage.getItem('tareas') ?\n  JSON.parse(localStorage.getItem('tareas')) : [];\n\n  //establecemos el estado de las tareas\n  let [tareas, cambiarTareas] = useState(tareasGuardadas);\n  useEffect(() => {\n    localStorage.setItem('tareas', JSON.stringify(tareas))\n  }, [tareas]);\n\n  //guardamos el estado dentro de localstorage\n  let [mostrarCompletadas, setMostrarCompletadas] = useState(true);\n  useEffect(() => {\n    localStorage.setItem('mostrarCompletadas', mostrarCompletadas.toString())\n  }, [mostrarCompletadas]);\n\n\n  return (\n    <div className=\"contenedor\">\n      <Header mostrarCompletadas={mostrarCompletadas} setMostrarCompletadas={setMostrarCompletadas}/>\n      <FormularioTareas tareas={tareas} cambiarTareas={cambiarTareas} />\n      <ListaTareas\n        tareas={tareas}\n        cambiarTareas={cambiarTareas}\n        mostrarCompletadas={mostrarCompletadas}  \n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}